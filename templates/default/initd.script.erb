#!/bin/bash
#
# Init file for <%= @daemon_name.capitalize %>
#
# chkconfig: 345 20 80
# description: <%= @daemon_name %> daemon
#
# processname: <%= @daemon_name %>
# pidfile: /var/run/<%= @daemon_name %>.pid

# Source function library
. /etc/rc.d/init.d/functions

# Source networking configuration
. /etc/sysconfig/network

# Check that networking is up
[ "$NETWORKING" = "no" ] && exit 0

DAEMON=<%= @daemon_name %>
PIDFILE=/var/run/$DAEMON.pid
RETVAL=0

export SCALA_VERSION="<%= node[:kafka][:scala_version] %>"
export JMX_PORT="<%= @jmx_port %>"

export KAFKA_LOG4J_OPTS="-Dlog4j.configuration=file:<%= node[:kafka][:config_dir] %>/<%= @log4j_config %>"
export KAFKA_HEAP_OPTS="-Xmx1G -Xms1G"

start() {
  if [ -f $PIDFILE ] && checkpid $(head -1 $PIDFILE); then
    echo "$DAEMON (pid  $(head -1 $PIDFILE)) is already running..."
    exit 0
  fi

  START_CMD="<%= node[:kafka][:install_dir] %>/bin/kafka-run-class.sh daemon <%= @main_class %> <%= node[:kafka][:config_dir] %>/<%= @config %>"

  echo -n $"Starting $DAEMON"
  nohup $START_CMD > /dev/null 2>&1 &
  RETVAL=$?
  PID=$!
  sleep 2
  [ $RETVAL -eq 0 ] && echo_success || echo_failure
  echo
  echo $PID > $PIDFILE
}

stop() {
  action "Stopping $DAEMON" killproc -p $PIDFILE -d 5
  RETVAL=$?
}

check_status() {
  status -p $PIDFILE $DAEMON
  RETVAL=$?
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    start
    ;;
  status)
    check_status
    ;;
  *)
    echo "Usage: $DAEMON {start|stop|restart|status}" >&2
    RETVAL=1
    ;;
esac

exit $RETVAL
