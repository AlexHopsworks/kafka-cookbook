---
driver:
  name: vagrant
  vagrantfiles:
    - 'vagrantfiles/cachier.rb'
  box_check_update: false
  network:
    - ['private_network', {type: 'dhcp', nictype: 'virtio'}]
  customize:
    memory: 1024
    cpus: 2
    ioapic: 'on'
    natdnshostresolver1: 'on'
    natdnsproxy1: 'on'
    nictype1: 'virtio'
    nictype2: 'virtio'

verifier:
  root_path: '/tmp/vagrant-cache/busser'

provisioner:
  name: 'chef_solo'
  require_chef_omnibus: <%= ENV.fetch('CHEF_VERSION', '11.16.4') %>
  chef_omnibus_install_options: '-d /tmp/vagrant-cache/omnibus'
  solo_rb:
    file_cache_path: '/tmp/vagrant-cache/chef'
  attributes:
    kafka:
      log4j:
        appenders:
          zookeeperAppender:
            type: 'org.apache.log4j.FileAppender'
            file: '/var/log/kafka/zookeeper.log'
            layout:
              type: 'org.apache.log4j.PatternLayout'
              conversion_pattern: '[%d] %p %m (%c)%n'
        loggers:
          org.apache.zookeeper:
            level: 'INFO'
            appender: 'zookeeperAppender'
            additivity: false

platforms:
  - name: centos-6.5
    attributes:
      java:
        jdk_version: 7
  - name: centos-7.0
    attributes:
      java:
        jdk_version: 7
  - name: debian-7.4
    run_list:
      - recipe[apt]
    attributes:
      java:
        jdk_version: 7
  - name: ubuntu-14.04
    run_list:
      - recipe[apt]
    attributes:
      java:
        jdk_version: 7
  - name: fedora-20
    attributes:
      java:
        jdk_version: 7

suites:
  - name: init-style-upstart
    run_list:
      - recipe[java::default]
      - recipe[kafka::default]
    includes:
      - ubuntu-14.04
    attributes:
      kafka:
        init_style: 'upstart'
        version: <%= ENV.fetch('KAFKA_VERSION', '0.8.1.1') %>
        checksum: <%= ENV.fetch('KAFKA_CHECKSUM', '""') %>
        md5_checksum: <%= ENV.fetch('KAFKA_MD5', '""') %>
        ulimit_file: 128000
        broker:
          controlled_shutdown_enable: <%= ENV.fetch('KAFKA_CTRL_SHUTDOWN', nil) %>
          log_dirs: ['/mnt/kafka-logs-1', '/mnt/kafka-logs-2']
          zookeeper_connect: ['localhost:2181']
          zookeeper_connection_timeout_ms: 15_000
  - name: init-style-sysv
    run_list:
      - recipe[java::default]
      - recipe[kafka::default]
    excludes:
      - centos-7.0
    attributes:
      kafka:
        version: <%= ENV.fetch('KAFKA_VERSION', '0.8.1.1') %>
        checksum: <%= ENV.fetch('KAFKA_CHECKSUM', '""') %>
        md5_checksum: <%= ENV.fetch('KAFKA_MD5', '""') %>
        ulimit_file: 128000
        broker:
          controlled_shutdown_enable: <%= ENV.fetch('KAFKA_CTRL_SHUTDOWN', nil) %>
          log_dirs: ['/mnt/kafka-logs-1', '/mnt/kafka-logs-2']
          zookeeper_connect: ['localhost:2181']
          zookeeper_connection_timeout_ms: 15_000
  - name: init-style-systemd
    run_list:
      - recipe[java::default]
      - recipe[kafka::default]
    includes:
      - fedora-20
      - centos-7.0
    attributes:
      kafka:
        init_style: 'systemd'
        version: <%= ENV.fetch('KAFKA_VERSION', '0.8.1.1') %>
        checksum: <%= ENV.fetch('KAFKA_CHECKSUM', '""') %>
        md5_checksum: <%= ENV.fetch('KAFKA_MD5', '""') %>
        ulimit_file: 128000
        broker:
          controlled_shutdown_enable: <%= ENV.fetch('KAFKA_CTRL_SHUTDOWN', nil) %>
          log_dirs: ['/mnt/kafka-logs-1', '/mnt/kafka-logs-2']
          zookeeper_connect: ['localhost:2181']
          zookeeper_connection_timeout_ms: 15_000
